-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from BNFC/ParLatte.y
-----------------------------------------------------------------------------

state 133 contains 1 shift/reduce conflicts.

rule 44 is unused
rule 45 is unused
rule 46 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident Inheritance '{' ListMemberDecl '}'   (6)
	Inheritance -> 'extends' Ident                     (7)
	Inheritance ->                                     (8)
	MemberDecl -> Type Ident                           (9)
	MemberDecl -> Type Ident '(' ListArg ')' Block     (10)
	ListMemberDecl ->                                  (11)
	ListMemberDecl -> MemberDecl                       (12)
	ListMemberDecl -> MemberDecl ';' ListMemberDecl    (13)
	ListTopDef -> TopDef                               (14)
	ListTopDef -> TopDef ListTopDef                    (15)
	Arg -> Type Ident                                  (16)
	ListArg ->                                         (17)
	ListArg -> Arg                                     (18)
	ListArg -> Arg ',' ListArg                         (19)
	Block -> '{' ListStmt '}'                          (20)
	ListStmt ->                                        (21)
	ListStmt -> ListStmt Stmt                          (22)
	Stmt -> ';'                                        (23)
	Stmt -> Block                                      (24)
	Stmt -> Type ListItem ';'                          (25)
	Stmt -> Ident '=' Expr ';'                         (26)
	Stmt -> Ident '++' ';'                             (27)
	Stmt -> Ident '--' ';'                             (28)
	Stmt -> 'return' Expr ';'                          (29)
	Stmt -> 'return' ';'                               (30)
	Stmt -> 'if' '(' Expr ')' Stmt                     (31)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (32)
	Stmt -> 'while' '(' Expr ')' Stmt                  (33)
	Stmt -> Expr ';'                                   (34)
	Item -> Ident                                      (35)
	Item -> Ident '=' Expr                             (36)
	ListItem -> Item                                   (37)
	ListItem -> Item ',' ListItem                      (38)
	Type -> 'int'                                      (39)
	Type -> 'string'                                   (40)
	Type -> 'boolean'                                  (41)
	Type -> 'void'                                     (42)
	Type -> Ident                                      (43)
	ListType ->                                        (44)
	ListType -> Type                                   (45)
	ListType -> Type ',' ListType                      (46)
	Expr6 -> Ident                                     (47)
	Expr6 -> Integer                                   (48)
	Expr6 -> 'true'                                    (49)
	Expr6 -> 'false'                                   (50)
	Expr6 -> 'null'                                    (51)
	Expr6 -> 'new' Ident                               (52)
	Expr6 -> Ident '(' ListExpr ')'                    (53)
	Expr6 -> String                                    (54)
	Expr6 -> '(' Ident ')null'                         (55)
	Expr6 -> Ident '.' Ident                           (56)
	Expr6 -> Ident '.' Ident '(' ListExpr ')'          (57)
	Expr6 -> '(' Expr ')'                              (58)
	Expr5 -> '-' Expr6                                 (59)
	Expr5 -> '!' Expr6                                 (60)
	Expr5 -> Expr6                                     (61)
	Expr4 -> Expr4 MulOp Expr5                         (62)
	Expr4 -> Expr5                                     (63)
	Expr3 -> Expr3 AddOp Expr4                         (64)
	Expr3 -> Expr4                                     (65)
	Expr2 -> Expr2 RelOp Expr3                         (66)
	Expr2 -> Expr3                                     (67)
	Expr1 -> Expr2 '&&' Expr1                          (68)
	Expr1 -> Expr2                                     (69)
	Expr -> Expr1 '||' Expr                            (70)
	Expr -> Expr1                                      (71)
	ListExpr ->                                        (72)
	ListExpr -> Expr                                   (73)
	ListExpr -> Expr ',' ListExpr                      (74)
	AddOp -> '+'                                       (75)
	AddOp -> '-'                                       (76)
	MulOp -> '*'                                       (77)
	MulOp -> '/'                                       (78)
	MulOp -> '%'                                       (79)
	RelOp -> '<'                                       (80)
	RelOp -> '<='                                      (81)
	RelOp -> '>'                                       (82)
	RelOp -> '>='                                      (83)
	RelOp -> '=='                                      (84)
	RelOp -> '!='                                      (85)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'boolean'      { PT _ (TS _ 23) }
	'class'        { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'extends'      { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'new'          { PT _ (TS _ 30) }
	'null'         { PT _ (TS _ 31) }
	'return'       { PT _ (TS _ 32) }
	'string'       { PT _ (TS _ 33) }
	'true'         { PT _ (TS _ 34) }
	'void'         { PT _ (TS _ 35) }
	'while'        { PT _ (TS _ 36) }
	'{'            { PT _ (TS _ 37) }
	'||'           { PT _ (TS _ 38) }
	'}'            { PT _ (TS _ 39) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	Inheritance     rules 7, 8
	MemberDecl      rules 9, 10
	ListMemberDecl  rules 11, 12, 13
	ListTopDef      rules 14, 15
	Arg             rule  16
	ListArg         rules 17, 18, 19
	Block           rule  20
	ListStmt        rules 21, 22
	Stmt            rules 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34
	Item            rules 35, 36
	ListItem        rules 37, 38
	Type            rules 39, 40, 41, 42, 43
	ListType        rules 44, 45, 46
	Expr6           rules 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58
	Expr5           rules 59, 60, 61
	Expr4           rules 62, 63
	Expr3           rules 64, 65
	Expr2           rules 66, 67
	Expr1           rules 68, 69
	Expr            rules 70, 71
	ListExpr        rules 72, 73, 74
	AddOp           rules 75, 76
	MulOp           rules 77, 78, 79
	RelOp           rules 80, 81, 82, 83, 84, 85

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 43)

	L_ident        reduce using rule 43


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 14)
	ListTopDef -> TopDef . ListTopDef                   (rule 15)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2
	%eof           reduce using rule 14

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 15
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 41)

	L_ident        reduce using rule 41


State 9

	TopDef -> 'class' . Ident Inheritance '{' ListMemberDecl '}'    (rule 6)

	L_ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 39)

	L_ident        reduce using rule 39


State 11

	Type -> 'string' .                                  (rule 40)

	L_ident        reduce using rule 40


State 12

	Type -> 'void' .                                    (rule 42)

	L_ident        reduce using rule 42


State 13

	TopDef -> 'class' Ident . Inheritance '{' ListMemberDecl '}'    (rule 6)

	'extends'      shift, and enter state 18
	'{'            reduce using rule 8

	Inheritance    goto state 17

State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 16


State 15

	ListTopDef -> TopDef ListTopDef .                   (rule 15)

	%eof           reduce using rule 15


State 16

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 17
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 22
	Type           goto state 23

State 17

	TopDef -> 'class' Ident Inheritance . '{' ListMemberDecl '}'    (rule 6)

	'{'            shift, and enter state 20


State 18

	Inheritance -> 'extends' . Ident                    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 19

State 19

	Inheritance -> 'extends' Ident .                    (rule 7)

	'{'            reduce using rule 7


State 20

	TopDef -> 'class' Ident Inheritance '{' . ListMemberDecl '}'    (rule 6)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 11
	L_ident        shift, and enter state 2

	Ident          goto state 3
	MemberDecl     goto state 27
	ListMemberDecl goto state 28
	Type           goto state 29

State 21

	ListArg -> Arg .                                    (rule 18)
	ListArg -> Arg . ',' ListArg                        (rule 19)

	')'            reduce using rule 18
	','            shift, and enter state 26


State 22

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 25


State 23

	Arg -> Type . Ident                                 (rule 16)

	L_ident        shift, and enter state 2

	Ident          goto state 24

State 24

	Arg -> Type Ident .                                 (rule 16)

	')'            reduce using rule 16
	','            reduce using rule 16


State 25

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 35

	Block          goto state 34

State 26

	ListArg -> Arg ',' . ListArg                        (rule 19)

	')'            reduce using rule 17
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 33
	Type           goto state 23

State 27

	ListMemberDecl -> MemberDecl .                      (rule 12)
	ListMemberDecl -> MemberDecl . ';' ListMemberDecl    (rule 13)

	';'            shift, and enter state 32
	'}'            reduce using rule 12


State 28

	TopDef -> 'class' Ident Inheritance '{' ListMemberDecl . '}'    (rule 6)

	'}'            shift, and enter state 31


State 29

	MemberDecl -> Type . Ident                          (rule 9)
	MemberDecl -> Type . Ident '(' ListArg ')' Block    (rule 10)

	L_ident        shift, and enter state 2

	Ident          goto state 30

State 30

	MemberDecl -> Type Ident .                          (rule 9)
	MemberDecl -> Type Ident . '(' ListArg ')' Block    (rule 10)

	'('            shift, and enter state 38
	';'            reduce using rule 9
	'}'            reduce using rule 9


State 31

	TopDef -> 'class' Ident Inheritance '{' ListMemberDecl '}' .    (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 32

	ListMemberDecl -> MemberDecl ';' . ListMemberDecl    (rule 13)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 11
	L_ident        shift, and enter state 2

	Ident          goto state 3
	MemberDecl     goto state 27
	ListMemberDecl goto state 37
	Type           goto state 29

State 33

	ListArg -> Arg ',' ListArg .                        (rule 19)

	')'            reduce using rule 19


State 34

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 35

	Block -> '{' . ListStmt '}'                         (rule 20)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'null'         reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21

	ListStmt       goto state 36

State 36

	Block -> '{' ListStmt . '}'                         (rule 20)
	ListStmt -> ListStmt . Stmt                         (rule 22)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'if'           shift, and enter state 58
	'int'          shift, and enter state 10
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 35
	'}'            shift, and enter state 64
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 44
	Type           goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 37

	ListMemberDecl -> MemberDecl ';' ListMemberDecl .    (rule 13)

	'}'            reduce using rule 13


State 38

	MemberDecl -> Type Ident '(' . ListArg ')' Block    (rule 10)

	')'            reduce using rule 17
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 39
	Type           goto state 23

State 39

	MemberDecl -> Type Ident '(' ListArg . ')' Block    (rule 10)

	')'            shift, and enter state 102


State 40

	Stmt -> Ident . '=' Expr ';'                        (rule 26)
	Stmt -> Ident . '++' ';'                            (rule 27)
	Stmt -> Ident . '--' ';'                            (rule 28)
	Type -> Ident .                                     (rule 43)
	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)
	Expr6 -> Ident . '.' Ident                          (rule 56)
	Expr6 -> Ident . '.' Ident '(' ListExpr ')'         (rule 57)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 97
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 98
	'-'            reduce using rule 47
	'--'           shift, and enter state 99
	'.'            shift, and enter state 100
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            shift, and enter state 101
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47
	L_ident        reduce using rule 43


State 41

	Expr6 -> Integer .                                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 42

	Expr6 -> String .                                   (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 43

	Stmt -> Block .                                     (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'null'         reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 44

	ListStmt -> ListStmt Stmt .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'null'         reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 45

	Stmt -> Type . ListItem ';'                         (rule 25)

	L_ident        shift, and enter state 2

	Ident          goto state 94
	Item           goto state 95
	ListItem       goto state 96

State 46

	Expr5 -> Expr6 .                                    (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61


State 47

	Expr4 -> Expr5 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63


State 48

	Expr4 -> Expr4 . MulOp Expr5                        (rule 62)
	Expr3 -> Expr4 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            shift, and enter state 91
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 92
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 93
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65

	MulOp          goto state 90

State 49

	Expr3 -> Expr3 . AddOp Expr4                        (rule 64)
	Expr2 -> Expr3 .                                    (rule 67)

	'!='           reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 88
	','            reduce using rule 67
	'-'            shift, and enter state 89
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'||'           reduce using rule 67

	AddOp          goto state 87

State 50

	Expr2 -> Expr2 . RelOp Expr3                        (rule 66)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 68)
	Expr1 -> Expr2 .                                    (rule 69)

	'!='           shift, and enter state 80
	'&&'           shift, and enter state 81
	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	'<'            shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           reduce using rule 69

	RelOp          goto state 79

State 51

	Expr -> Expr1 . '||' Expr                           (rule 70)
	Expr -> Expr1 .                                     (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	'||'           shift, and enter state 78


State 52

	Stmt -> Expr . ';'                                  (rule 34)

	';'            shift, and enter state 77


State 53

	Expr5 -> '!' . Expr6                                (rule 60)

	'('            shift, and enter state 54
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 76

State 54

	Expr6 -> '(' . Ident ')null'                        (rule 55)
	Expr6 -> '(' . Expr ')'                             (rule 58)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 75

State 55

	Expr5 -> '-' . Expr6                                (rule 59)

	'('            shift, and enter state 54
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 73

State 56

	Stmt -> ';' .                                       (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'null'         reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 57

	Expr6 -> 'false' .                                  (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 58

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 31)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 32)

	'('            shift, and enter state 72


State 59

	Expr6 -> 'new' . Ident                              (rule 52)

	L_ident        shift, and enter state 2

	Ident          goto state 71

State 60

	Expr6 -> 'null' .                                   (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 61

	Stmt -> 'return' . Expr ';'                         (rule 29)
	Stmt -> 'return' . ';'                              (rule 30)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 70
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 69

State 62

	Expr6 -> 'true' .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 63

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 33)

	'('            shift, and enter state 67


State 64

	Block -> '{' ListStmt '}' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'class'        reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'null'         reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 65

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 66

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 67

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 33)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 122

State 68

	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)
	Expr6 -> Ident . '.' Ident                          (rule 56)
	Expr6 -> Ident . '.' Ident '(' ListExpr ')'         (rule 57)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 97
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'.'            shift, and enter state 100
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 69

	Stmt -> 'return' Expr . ';'                         (rule 29)

	';'            shift, and enter state 121


State 70

	Stmt -> 'return' ';' .                              (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'null'         reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 71

	Expr6 -> 'new' Ident .                              (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 72

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 31)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 32)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 120

State 73

	Expr5 -> '-' Expr6 .                                (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59


State 74

	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)
	Expr6 -> '(' Ident . ')null'                        (rule 55)
	Expr6 -> Ident . '.' Ident                          (rule 56)
	Expr6 -> Ident . '.' Ident '(' ListExpr ')'         (rule 57)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 97
	')'            reduce using rule 47
	')null'        shift, and enter state 119
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'.'            shift, and enter state 100
	'/'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 75

	Expr6 -> '(' Expr . ')'                             (rule 58)

	')'            shift, and enter state 118


State 76

	Expr5 -> '!' Expr6 .                                (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60


State 77

	Stmt -> Expr ';' .                                  (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'null'         reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 78

	Expr -> Expr1 '||' . Expr                           (rule 70)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 117

State 79

	Expr2 -> Expr2 RelOp . Expr3                        (rule 66)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 116

State 80

	RelOp -> '!=' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'null'         reduce using rule 85
	'true'         reduce using rule 85
	L_ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 81

	Expr1 -> Expr2 '&&' . Expr1                         (rule 68)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 115

State 82

	RelOp -> '<' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'null'         reduce using rule 80
	'true'         reduce using rule 80
	L_ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 83

	RelOp -> '<=' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'null'         reduce using rule 81
	'true'         reduce using rule 81
	L_ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 84

	RelOp -> '==' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'null'         reduce using rule 84
	'true'         reduce using rule 84
	L_ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 85

	RelOp -> '>' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'null'         reduce using rule 82
	'true'         reduce using rule 82
	L_ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 86

	RelOp -> '>=' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'null'         reduce using rule 83
	'true'         reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 87

	Expr3 -> Expr3 AddOp . Expr4                        (rule 64)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 114

State 88

	AddOp -> '+' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'new'          reduce using rule 75
	'null'         reduce using rule 75
	'true'         reduce using rule 75
	L_ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 89

	AddOp -> '-' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'new'          reduce using rule 76
	'null'         reduce using rule 76
	'true'         reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 90

	Expr4 -> Expr4 MulOp . Expr5                        (rule 62)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 113

State 91

	MulOp -> '%' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'null'         reduce using rule 79
	'true'         reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 92

	MulOp -> '*' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'null'         reduce using rule 77
	'true'         reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 93

	MulOp -> '/' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'null'         reduce using rule 78
	'true'         reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 94

	Item -> Ident .                                     (rule 35)
	Item -> Ident . '=' Expr                            (rule 36)

	','            reduce using rule 35
	';'            reduce using rule 35
	'='            shift, and enter state 112


State 95

	ListItem -> Item .                                  (rule 37)
	ListItem -> Item . ',' ListItem                     (rule 38)

	','            shift, and enter state 111
	';'            reduce using rule 37


State 96

	Stmt -> Type ListItem . ';'                         (rule 25)

	';'            shift, and enter state 110


State 97

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 53)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	')'            reduce using rule 72
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 108
	ListExpr       goto state 109

State 98

	Stmt -> Ident '++' . ';'                            (rule 27)

	';'            shift, and enter state 107


State 99

	Stmt -> Ident '--' . ';'                            (rule 28)

	';'            shift, and enter state 106


State 100

	Expr6 -> Ident '.' . Ident                          (rule 56)
	Expr6 -> Ident '.' . Ident '(' ListExpr ')'         (rule 57)

	L_ident        shift, and enter state 2

	Ident          goto state 105

State 101

	Stmt -> Ident '=' . Expr ';'                        (rule 26)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 104

State 102

	MemberDecl -> Type Ident '(' ListArg ')' . Block    (rule 10)

	'{'            shift, and enter state 35

	Block          goto state 103

State 103

	MemberDecl -> Type Ident '(' ListArg ')' Block .    (rule 10)

	';'            reduce using rule 10
	'}'            reduce using rule 10


State 104

	Stmt -> Ident '=' Expr . ';'                        (rule 26)

	';'            shift, and enter state 130


State 105

	Expr6 -> Ident '.' Ident .                          (rule 56)
	Expr6 -> Ident '.' Ident . '(' ListExpr ')'         (rule 57)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            shift, and enter state 129
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56


State 106

	Stmt -> Ident '--' ';' .                            (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'null'         reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 107

	Stmt -> Ident '++' ';' .                            (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'null'         reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 108

	ListExpr -> Expr .                                  (rule 73)
	ListExpr -> Expr . ',' ListExpr                     (rule 74)

	')'            reduce using rule 73
	','            shift, and enter state 128


State 109

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 53)

	')'            shift, and enter state 127


State 110

	Stmt -> Type ListItem ';' .                         (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'null'         reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 111

	ListItem -> Item ',' . ListItem                     (rule 38)

	L_ident        shift, and enter state 2

	Ident          goto state 94
	Item           goto state 95
	ListItem       goto state 126

State 112

	Item -> Ident '=' . Expr                            (rule 36)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 125

State 113

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62


State 114

	Expr4 -> Expr4 . MulOp Expr5                        (rule 62)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 64)

	'!='           reduce using rule 64
	'%'            shift, and enter state 91
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 92
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            shift, and enter state 93
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64

	MulOp          goto state 90

State 115

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68
	'||'           reduce using rule 68


State 116

	Expr3 -> Expr3 . AddOp Expr4                        (rule 64)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 66)

	'!='           reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'+'            shift, and enter state 88
	','            reduce using rule 66
	'-'            shift, and enter state 89
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'||'           reduce using rule 66

	AddOp          goto state 87

State 117

	Expr -> Expr1 '||' Expr .                           (rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70


State 118

	Expr6 -> '(' Expr ')' .                             (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58


State 119

	Expr6 -> '(' Ident ')null' .                        (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 120

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 31)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 32)

	')'            shift, and enter state 124


State 121

	Stmt -> 'return' Expr ';' .                         (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'null'         reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 122

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 33)

	')'            shift, and enter state 123


State 123

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 33)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'if'           shift, and enter state 58
	'int'          shift, and enter state 10
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 35
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 134
	Type           goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 124

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 31)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 32)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'if'           shift, and enter state 58
	'int'          shift, and enter state 10
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 35
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 133
	Type           goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 125

	Item -> Ident '=' Expr .                            (rule 36)

	','            reduce using rule 36
	';'            reduce using rule 36


State 126

	ListItem -> Item ',' ListItem .                     (rule 38)

	';'            reduce using rule 38


State 127

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 128

	ListExpr -> Expr ',' . ListExpr                     (rule 74)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	')'            reduce using rule 72
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 108
	ListExpr       goto state 132

State 129

	Expr6 -> Ident '.' Ident '(' . ListExpr ')'         (rule 57)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	')'            reduce using rule 72
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 68
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 108
	ListExpr       goto state 131

State 130

	Stmt -> Ident '=' Expr ';' .                        (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'null'         reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 131

	Expr6 -> Ident '.' Ident '(' ListExpr . ')'         (rule 57)

	')'            shift, and enter state 136


State 132

	ListExpr -> Expr ',' ListExpr .                     (rule 74)

	')'            reduce using rule 74


State 133

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 31)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 32)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         shift, and enter state 135
			(reduce using rule 31)

	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'null'         reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 134

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'null'         reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 135

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 32)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'if'           shift, and enter state 58
	'int'          shift, and enter state 10
	'new'          shift, and enter state 59
	'null'         shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 35
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 137
	Type           goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 136

	Expr6 -> Ident '.' Ident '(' ListExpr ')' .         (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57


State 137

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'null'         reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 86
Number of terminals: 42
Number of non-terminals: 30
Number of states: 138
